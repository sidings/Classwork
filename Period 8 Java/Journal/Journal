Juice Feng

5/4/17
	Goal: Today, I will research the necessary parts for connecting my project's information to a database. 
	- I was able to access wampserver and phpmyadmin. I started looking up javascript and php code to try and 
		remember what I had learned last year. I have forgotten a lot so I will be writing and testing code 
		tomorrow. 
		
5/5/17
	Goal: Today, there has been a change of plans. We are going to do this in Java instead. My goal today is to 
		understand what Vaadin is and how it works in conjunction with our project and Eclipse. I will also try
		to understand how databases will fit in here. Previously, we used php in our Javascript files to access
		our databases. Now, I have to figure out what to use in Java and which other programs I will need to 
		be proficient in to make the whole thing work. 
	- I have no idea what Vaadin is. However, I found out that we could use the JDBC API to access databases.
		There are tutorials online and apparently, it works with MySQL, so I will try out the tutorials and 
		learn the new syntax.
		
5/8/17
	Goal: Today, I will ask Mr. Nockles what Vaadin is and see how it applies to our project. If it doesn't apply, 
		then I need to find another method.
	- Apparently, Vaadin is used for front end conversion of Java code into Javascript. It could be useful, but we 
		have decided to apply it at the end after having all of our base code running in Eclipse. This has nothing 
		to do with my part (Database), so I will continue on my own research tomorrow. The responsibility over 
		Vaadin, if we are using it, will be designated to Veeraj because he is in charge of the front end. 
		
5/10/17
	Goal: Today, I will figure out what programs I need to implement databases in my code. Something about JDBC
		and mySQL??
	- So I have found some tutorials online on how to use them in Java, but they first required me to have mySQL
		and the mySQL JDBC driver downloaded. I have the driver downloaded, but the Internet is very slow and 
		I'm getting an estimate of 2 hours for mySQL to download. I will watch some videos of what to do in the 
		meantime. 
		Update: Just spoke to Max and his group is also trying to implement databases. He brought up a good point
		that if I download mySQL, I will have to have it downloaded on every computer that I am running my chatroom
		on. His suggestion of using php didn't help because our entire project is in Java. I will look up the best
		solution at home.

5/11/17
	Goal: Try to workaround needing to redownload mySQL.
	- Oh, good day!!!!!! I was able to connect phpMyAdmin to Java. Now, I can access the databases through the usage 
		of wampserver. Now, I will mess around with the code to find out cool things that I can do. We are hoping to 
		store images and emojis somehow.
		
5/12/17
	Goal: Today, I will find out how to store images in a database and try it out. Also, I will further develop my
		knowledge on the different SQL related Java methods.
	- So apparently it is possible to store images in a database, but I think we have to store their file paths? I 
		was in the middle of looking this up when I got sidetracked by researching all the different methods that
		will need to be used, such as setBinaryStream, and the difference between the different data types, such as 
		PreparedStatement vs Statement vs CallableStatement. Also, I wonder how we will be able to get the image paths
		in the midst of running the chatroom. In other words, how will the user be able to input it?
		
5/15/17
	Goal: Today, I will continue my last goal of trying to add images and emojis to a database. Also, I will have 
		to figure out how I will have the user upload the images from their own files.
	- I worked with Victor to figure out the errors with his server-client connection. Apparently, it had something 
		to do with the firewall on the computer and/or network. We will have to use our own hotspot. I'm still trying
		to figure out the images/emojis issue. Victor brought up a good question that I will also have to think about-
		how will I get each table to be representative of a conversation? How will I label the tables to have it 
		"belong" to two people? I am thinking about naming the tables with the names of the people. There might be 
		another way..
		
5/16/17
	Goal: Today, I will continue working on the same thing. I will also think about having a login for the users and
		a table that will hold these logins. Figuring out the best way to keep all this info together will be a main
		goal.
	- I spoke with my group members and some of our tasks overlap so we have divided the tasks again. I am solely 
		working on keeping track of the messages between two users depending on their usernames/names. Each 
		conversation will be a new table. I will have to create new tables each time a user speaks with someone new.
		I need Veeraj to finish the login so I can use his variables and methods.
	
5/17/17
	Goal: Veeraj is absent today so I will wait for his method of coding the login to connect it to the database.
		Meanwhile, I will find out how to allow other computers on the same network to access my phpmyadmin so that
		we can use the same databases. 
	- I found out that there are different users that are allowed on phpmyadmin and to access an account from another
		computer, you need to change the permissions in phpmyadmin's config file. That's found in wampserver -> Apache
		-> Alias Directories -> phpmyadmin. I watched a few videos on how to rewrite the code to check if it works.
		Apparently if I allow permission from my computer's ip address, phpmyadmin should show up when I try to access
		it but instead, it's telling me that I don't have permission. Maybe there's something going on with this 
		computer and it's network?? I will Google this later.
		
5/22/17
	Goal: Figure out this issue that I can't seem to solve. More and more sure that it has something to do with the 
		the network that the computers are on.
	- So spoke to Mr. Nockles and it's most likely due to that. I kept trying different tricks to try and connect the
		computers but nothing seems to work. Not sure what the next step is here. If we can't have the computers 
		access the same database then my part of the project will be incomplete. 
		
5/23/17
     Goal: Today I will work with Veeraj and try to fix the problem in his code where he cannot link the login GUI 
     	to the actual chatroom. We're not sure where the problem is because the code makes sense.
     - Could not figure out the problem. After a user inputs the correct login, the window closes and the client 
     	window opens but without any text. Still not sure why this happens. It shouldn't have anything to do with 
     	the dispose() method because this was called on the login window, then the client window was opened. From 
     	Veeraj's code, I got a new idea for my database problem. I could have all the messages stored in a text file
     	with the program dynamically creating new text files every time someone starts a new conversation with 
     	someone else. This won't be dynamic in the sense that one would have to pull and rerun the project in order
     	to have the updated messages, but it's better than nothing at this point.
5/24/17
  	Goal: Try at Veeraj's problem again but focus on the alternate way to create files.
  	- Still unclear why Veeraj's code doesn't work even though everything seems correct. The dynamic creation of 
  		files requires me to learn new data types like File, FileWriter, PrintWriter, Writer, etc. I will continue
  		my research on this topic tomorrow. Veeraj seems to have it working in his files so I will have to dissect 
  		Victor's Client code to figure out when to create the new files and save the messages that the clients 
  		are sending to each other.
  
5/25/17
	Goal: Today, I will work on the text file method and try to get it to work.
	- It works! I was able to create the text file dynamically. It took a long time of testing and trying to 
		understand Victor's code to know where to fit in my part. The only thing is that I need to make the program
		write to the file dynamically, which shouldn't be too hard. I will work on that tomorrow. I think it has
		something to do with the file path that I have set. I think I might have the wrong path but that should
		also be an easy fix. 
		
5/26/17
	Goal: Today, I will work on the same thing.
	- I still haven't gotten it to work yet. This is all just a matter of putting it in the right place and I'm not 
		doing that. I have it in a place where it only writes to the text file once even though its in a for loop.
		This is because after I call the write method, I have to call the close method which closes the writer. I 
		have to separate my code from my check for the file's existence in order to have it work correctly. Not
		entirely too sure as to why the writer doesn't get recreated after I call the method. 
		
5/30/17
	Goal: To get the thing to work today.
	- I realized that I had misinterpreted Victor's code but I realized too soon. I am getting close to the answer 
		but not there yet. I have no clue as to why it isn't writing to the txt file. Quite frustrating but I will
		ask Jenniber tomorrow because apparently she has done the same thing. I am able to access what the user is
		typing but I don't know why my writer isn't writing to the file. 
		
5/31/17
	Goal: Get it working today.
	- It works! I was able to append the new message to the end of the txt file every time. The problem was that
		I was missing a boolean when declaring the FileWriter variable. Without the boolean, the writer rewrote
		the file every single time instead of appending to it. I fixed so that the writer writes to the file 
		every time the client clicks enter. I now have to make it work for the server. After trying it, I ran 
		into a few road blocks. I need both the server and the client to be able to access each other's IP addresses 
		as an identifier for naming the txt file. Since they are in different projects, I need to figure out the best 
		way to do this. Also, I realized that I need to be able to interchange the IP addresses when naming the txt 
		file. For example, it could be names "victor+joyce.txt" or "joyce+victor.txt". I will need to account for 
		this small discrepancy and have the writer be consistent in whichever file it is writing to. I will work on 
		these problems tomorrow.
		
6/1/17
	Goal: Fix the two issues brought up in yesterday's journal.
	- I haven't gotten them to fully work yet. The code for the interchanging of the txt file's name is very messy
		and long so I am trying to think of another way to do it. For the accessing of the other's IP address, I 
		think I will try to send it over in a parameter, but I'm not completely sure yet. If anything, I could also
		print it in the pop up window and have both classes retrieve it from there. (At this point, I think my skill
		can no longer be database work because the program doesn't access databases at all.) 
	
6/5/17
	Goal: Fix the two issues
	- I almost fixed the problem with interchanging the names of the people who are in the current chat so that there are
		not two different txt files being created. I just had more conditions when checking if one file exists to
		also check if the other exists. Then if neither exist, the program creates a new file with the server's 
		name going first. I will continue to work on the other problem tomorrow.

6/6/17
	Goal: Fix the other issue of interchanging names in the txt file's name
	- I first tried to access the IP addresses of both the server and the client remotely but realized that the 
		problem that I'm trying to fix is not the right problem to be focusing on. I realized that when creating a 
		txt file between two people who have never chatted before, the program will create a new txt file from one
		side and be writing to it. The other (server or client) will try to access that file at the same time to
		write to it but will not be able to because the project is not dynamic like that. One will need to commit 
		and push after starting a chat and both will need to pull in order for both to have the txt file. Instead, 
		I decided to make it so that a txt file is created for a chat between both users when a new user is created.
		When a new user is created, the program will iterate through the different usernames that have been created
		so far and create a new chat with those old users and the current new user. This will make an awfully
		large amount of txt files but I think that this solution is better when running the program to make the two
		users take a smaller amount of steps before they can fully talk and the program and fully record their 
		conversation.
	